services:
  platformservice:
    image: platformservice
    build:
      context: .
      dockerfile: PlatformService/Dockerfile
    ports:
      - "10100:8080"
      - "10200:6666"
    depends_on:
      - sqlserver
      - rabbitmq
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jeager:4317"

  commandservice:
    image: commandservice
    build:
      context: .
      dockerfile: CommandService/Dockerfile
    ports:
      - "10101:8080"
    depends_on:
      - sqlserver
      - rabbitmq
      - platformservice
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jeager:4317"
  
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1436:1433"
    volumes:
      - sql-data:/var/opt/mssql/data
        
  rabbitmq:
    image: rabbitmq:3.12.12-management
    container_name: rabbitmq
    ports:
      - "15673:15672"  # Web management UI
      - "5673:5672"    # AMQP
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      
  jeager:
    image: jaegertracing/all-in-one:latest
    container_name: jeager
    ports:
      - 4717:4317
      - 4318:4318
      - 16686:16686

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana  # Persist Grafana data
    
volumes:
  sql-data:
  grafana_data: