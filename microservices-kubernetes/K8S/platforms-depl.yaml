apiVersion: apps/v1
kind: Deployment
metadata:
  name: platforms-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platformservice
  template:
    metadata:
      labels:
        app: platformservice
    spec:
      containers:
        - name: platformservice
          image: platformservice:dev # for release apiscevs/platformservice:dev
          imagePullPolicy: IfNotPresent # Get to the repo only if it is missing locally
          env:
          - name: "ASPNETCORE_ENVIRONMENT"
            value: "Production" 
          - name: "OTEL_EXPORTER_OTLP_ENDPOINT"
            value: "http://jaeger-clusterip:4317"
              
---
apiVersion: v1
kind: Service
metadata:
  name: platforms-clusterip-srv
spec:
  type: ClusterIP
  selector: 
    app: platformservice
  ports:
  - name: platformservice
    protocol: TCP
    port: 80
    targetPort: 8080 # the port that docker container is exposing
  - name: platformservicegrpc # workaround to make gRPC work without actual TLS certificate
    protocol: TCP
    port: 6666
    targetPort: 6666 # the port that docker container is exposing

# applies any chanhes to deployment, dont need to delete it
#kubectl apply -f platforms-depl.yaml 
#kubectl get deployments
#kubectl get pods

#kubectl delete deployment platforms-depl

#should pull latest image
#kubectl rollout restart deployment platforms-depl

# kubectl logs platforms-depl-744b9f9b47-qp2sv -- read logs from the pod